Class {
	#name : 'VerificationFrameworkSettings',
	#superclass : 'Object',
	#instVars : [
		'settings'
	],
	#classInstVars : [
		'settingsInstance'
	],
	#category : 'OntoUML-VerificationFramework-Settings',
	#package : 'OntoUML-VerificationFramework',
	#tag : 'Settings'
}

{ #category : 'access' }
VerificationFrameworkSettings class >> getInstance [
	settingsInstance ifNil: [ settingsInstance := self new. ].
	^ settingsInstance.
]

{ #category : 'updating-settings' }
VerificationFrameworkSettings class >> getSettingsOnMessageCodeFor: aVerification withGroup: aGroupSymbol classType: aClassType [
"I am responsible for generating code for methods, that represent settings for anti-patterns and verifications."
	^ 'settingsOn', aVerification name ,': aBuilder
	<systemsettings>
	"I represent settings for ', aVerification name ,' and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #access', aVerification name ,')
		parent: #', aGroupSymbol ,';
		target: self settingsInstance;
		label: ''', aVerification name , ''';
		description: ''Allow or deny detection of this ', aClassType ,'. For more information see documentation on: ', (OntoUMLDotOrgReferences getDefinitionReferenceForClass: aVerification) , '''.'.
]

{ #category : 'updating-access' }
VerificationFrameworkSettings class >> getterMessageCodeFor: aVerificationClass [
	^ 'access', aVerificationClass name , '
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: ', aVerificationClass name, '.'.
]

{ #category : 'access' }
VerificationFrameworkSettings class >> resetVerificationSettings [
	 settingsInstance := nil.
]

{ #category : 'updating-access' }
VerificationFrameworkSettings class >> setterMessageCodeFor: aVerificationClass [
	^ 'access', aVerificationClass name , ': aValue
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: ', aVerificationClass name ,' withValue: aValue.'.
]

{ #category : 'updating-access' }
VerificationFrameworkSettings class >> settingsInstance [
 	settingsInstance ifNil: [ settingsInstance := self new. ].
	^ settingsInstance.
]

{ #category : 'settings-verifications' }
VerificationFrameworkSettings class >> settingsOnAllowedSubtypesVerification: aBuilder [
	<systemsettings>
	"I represent settings for AllowedSubtypesVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessAllowedSubtypesVerification)
		parent: #ontoumlVerifications;
		target: self settingsInstance;
		label: 'AllowedSubtypesVerification';
		description: 'Allow or deny detection of this verification. For more information see documentation on: '.
]

{ #category : 'settings-verifications' }
VerificationFrameworkSettings class >> settingsOnAllowedSupertypesVerification: aBuilder [
	<systemsettings>
	"I represent settings for AllowedSupertypesVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessAllowedSupertypesVerification)
		parent: #ontoumlVerifications;
		target: self settingsInstance;
		label: 'AllowedSupertypesVerification';
		description: 'Allow or deny detection of this verification. For more information see documentation on: '.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnBinOverAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for BinOverAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessBinOverAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'BinOverAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/BinOver/index.html'.
]

{ #category : 'settings-verifications' }
VerificationFrameworkSettings class >> settingsOnCharacterizedVerification: aBuilder [
	<systemsettings>
	"I represent settings for CharacterizedVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessCharacterizedVerification)
		parent: #ontoumlVerifications;
		target: self settingsInstance;
		label: 'CharacterizedVerification';
		description: 'Allow or deny detection of this verification. For more information see documentation on: '.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnDecIntAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for DecIntAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessDecIntAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'DecIntAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/DecInt/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnDepPhaseAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for DepPhaseAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessDepPhaseAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'DepPhaseAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/DepPhase/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnFreeRoleAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for FreeRoleAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessFreeRoleAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'FreeRoleAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/FreeRole/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnGSRigAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for GSRigAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessGSRigAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'GSRigAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/GSRig/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnHetCollAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for HetCollAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessHetCollAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'HetCollAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/HetColl/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnHomoFuncAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for HomoFuncAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessHomoFuncAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'HomoFuncAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/HomoFunc/index.html'.
]

{ #category : 'settings-verifications' }
VerificationFrameworkSettings class >> settingsOnIdentityRequiredVerification: aBuilder [
	<systemsettings>
	"I represent settings for IdentityRequiredVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessIdentityRequiredVerification)
		parent: #ontoumlVerifications;
		target: self settingsInstance;
		label: 'IdentityRequiredVerification';
		description: 'Allow or deny detection of this verification. For more information see documentation on: '.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnImpAbsAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for ImpAbsAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessImpAbsAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'ImpAbsAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/ImpAbs/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnMixIdenAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for MixIdenAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessMixIdenAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'MixIdenAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/MixIden/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnMixRigAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for MixRigAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessMixRigAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'MixRigAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/MixRig/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnMultDepAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for MultDepAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessMultDepAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'MultDepAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/MultDep/index.html'.
]

{ #category : 'settings-verifications' }
VerificationFrameworkSettings class >> settingsOnPartOfGeneralizationSetVerification: aBuilder [
	<systemsettings>
	"I represent settings for PartOfGeneralizationSetVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessPartOfGeneralizationSetVerification)
		parent: #ontoumlVerifications;
		target: self settingsInstance;
		label: 'PartOfGeneralizationSetVerification';
		description: 'Allow or deny detection of this verification. For more information see documentation on: '.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnPartOverAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for PartOverAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessPartOverAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'PartOverAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/PartOver/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnRelCompAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for RelCompAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessRelCompAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'RelCompAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/RelComp/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnRelOverAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for RelOverAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessRelOverAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'RelOverAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/RelOver/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnRelRigAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for RelRigAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessRelRigAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'RelRigAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/RelRig/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnRelSpecAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for RelSpecAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessRelSpecAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'RelSpecAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/RelSpec/index.html'.
]

{ #category : 'settings-verifications' }
VerificationFrameworkSettings class >> settingsOnRelationSourceVerification: aBuilder [
	<systemsettings>
	"I represent settings for RelationSourceVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessRelationSourceVerification)
		parent: #ontoumlVerifications;
		target: self settingsInstance;
		label: 'RelationSourceVerification';
		description: 'Allow or deny detection of this verification. For more information see documentation on: '.
]

{ #category : 'settings-verifications' }
VerificationFrameworkSettings class >> settingsOnRelationTargetVerification: aBuilder [
	<systemsettings>
	"I represent settings for RelationTargetVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessRelationTargetVerification)
		parent: #ontoumlVerifications;
		target: self settingsInstance;
		label: 'RelationTargetVerification';
		description: 'Allow or deny detection of this verification. For more information see documentation on: '.
]

{ #category : 'settings-verifications' }
VerificationFrameworkSettings class >> settingsOnRelatorMediationDependencyVerification: aBuilder [
	<systemsettings>
	"I represent settings for RelatorMediationDependencyVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessRelatorMediationDependencyVerification)
		parent: #ontoumlVerifications;
		target: self settingsInstance;
		label: 'RelatorMediationDependencyVerification';
		description: 'Allow or deny detection of this verification. For more information see documentation on: '.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnRepRelAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for RepRelAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessRepRelAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'RepRelAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/RepRel/index.html'.
]

{ #category : 'settings-verifications' }
VerificationFrameworkSettings class >> settingsOnRoleMediationDependencyVerification: aBuilder [
	<systemsettings>
	"I represent settings for RoleMediationDependencyVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessRoleMediationDependencyVerification)
		parent: #ontoumlVerifications;
		target: self settingsInstance;
		label: 'RoleMediationDependencyVerification';
		description: 'Allow or deny detection of this verification. For more information see documentation on: '.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnUndefFormalAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for UndefFormalAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessUndefFormalAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'UndefFormalAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/UndefFormal/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnUndefPhaseAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for UndefPhaseAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessUndefPhaseAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'UndefPhaseAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/UndefPhase/index.html'.
]

{ #category : 'settings-antipatterns' }
VerificationFrameworkSettings class >> settingsOnWholeOverAntipatternVerification: aBuilder [
	<systemsettings>
	"I represent settings for WholeOverAntipatternVerification and my code is generated from getSettingsOnMessageCodeFor:withGroup:classType:"
	(aBuilder setting: #accessWholeOverAntipatternVerification)
		parent: #ontoumlAntipatterns;
		target: self settingsInstance;
		label: 'WholeOverAntipatternVerification';
		description: 'Allow or deny detection of this anti-pattern. For more information see documentation on: https://ontouml.readthedocs.io/en/latest/anti-patterns/WholeOver/index.html'.
]

{ #category : 'updating' }
VerificationFrameworkSettings class >> update [

	<script>
	self updateAccessMethods.
	self updateVerificationSettings
]

{ #category : 'updating-access' }
VerificationFrameworkSettings class >> updateAccessMethods [

	<script>
	| verificationController |
	verificationController := VerificationController new.
	self updateAccessMethodsForVerifications: verificationController.
	self updateAccessMethodsForAntiPatterns: verificationController
]

{ #category : 'updating-access' }
VerificationFrameworkSettings class >> updateAccessMethodsFor: aVerification withClassification: aClassification [
	self compile: (self getterMessageCodeFor: aVerification) classified: aClassification.
	self compile: (self setterMessageCodeFor: aVerification) classified: aClassification.
]

{ #category : 'updating-access' }
VerificationFrameworkSettings class >> updateAccessMethodsForAntiPatterns: aVerController [
	aVerController getAntiPatternVerifications do: [ :verification | self updateAccessMethodsFor: verification withClassification: 'access - anti-patterns'. ].
]

{ #category : 'updating-access' }
VerificationFrameworkSettings class >> updateAccessMethodsForVerifications: aVerController [
	| verifications |
	verifications := aVerController getVerifications reject: [ :class | { Verification. StereotypeVerification. } includes: class ].
	verifications do: [ :verification | self updateAccessMethodsFor: verification withClassification: 'access - verifications'. ].
]

{ #category : 'updating-settings' }
VerificationFrameworkSettings class >> updateOptionsForVerificationSettings [
"I am responsible for generating methods, that represent settings options for verifications and anti-patterns"
	| controller |
	controller := VerificationController new.
	(controller getVerifications reject: [ :class | { Verification. StereotypeVerification. } includes: class ]) do: 
		[ :class | self class compile: (self getSettingsOnMessageCodeFor: class  withGroup: 'ontoumlVerifications' classType: 'verification' ) classified: 'settings-verifications' ].
	controller getAntiPatternVerifications do: 
		[ :class | self class compile: (self getSettingsOnMessageCodeFor: class  withGroup: 'ontoumlAntipatterns' classType: 'anti-pattern' ) classified: 'settings-antipatterns' ].
]

{ #category : 'updating-settings' }
VerificationFrameworkSettings class >> updateVerificationSettings [
	"I am responsible fro updating verifications settings. First I create new instance of VerificationSettings class and then i update all settings methods for anti-patterns and verifications."

	<script>
	self updateOptionsForVerificationSettings.
	settingsInstance := self new
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessAllowedSubtypesVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: AllowedSubtypesVerification.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessAllowedSubtypesVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: AllowedSubtypesVerification withValue: aValue.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessAllowedSupertypesVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: AllowedSupertypesVerification.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessAllowedSupertypesVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: AllowedSupertypesVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessBinOverAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: BinOverAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessBinOverAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: BinOverAntipatternVerification withValue: aValue.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessCharacterizedVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: CharacterizedVerification.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessCharacterizedVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: CharacterizedVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessDecIntAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: DecIntAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessDecIntAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: DecIntAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessDepPhaseAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: DepPhaseAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessDepPhaseAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: DepPhaseAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessFreeRoleAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: FreeRoleAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessFreeRoleAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: FreeRoleAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessGSRigAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: GSRigAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessGSRigAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: GSRigAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessHetCollAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: HetCollAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessHetCollAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: HetCollAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessHomoFuncAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: HomoFuncAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessHomoFuncAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: HomoFuncAntipatternVerification withValue: aValue.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessIdentityRequiredVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: IdentityRequiredVerification.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessIdentityRequiredVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: IdentityRequiredVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessImpAbsAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: ImpAbsAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessImpAbsAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: ImpAbsAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessMixIdenAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: MixIdenAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessMixIdenAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: MixIdenAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessMixRigAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: MixRigAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessMixRigAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: MixRigAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessMultDepAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: MultDepAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessMultDepAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: MultDepAntipatternVerification withValue: aValue.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessPartOfGeneralizationSetVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: PartOfGeneralizationSetVerification.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessPartOfGeneralizationSetVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: PartOfGeneralizationSetVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessPartOverAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: PartOverAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessPartOverAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: PartOverAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessRelCompAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: RelCompAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessRelCompAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: RelCompAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessRelOverAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: RelOverAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessRelOverAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: RelOverAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessRelRigAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: RelRigAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessRelRigAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: RelRigAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessRelSpecAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: RelSpecAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessRelSpecAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: RelSpecAntipatternVerification withValue: aValue.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessRelationSourceVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: RelationSourceVerification.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessRelationSourceVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: RelationSourceVerification withValue: aValue.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessRelationTargetVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: RelationTargetVerification.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessRelationTargetVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: RelationTargetVerification withValue: aValue.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessRelatorMediationDependencyVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: RelatorMediationDependencyVerification.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessRelatorMediationDependencyVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: RelatorMediationDependencyVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessRepRelAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: RepRelAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessRepRelAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: RepRelAntipatternVerification withValue: aValue.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessRoleMediationDependencyVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: RelationDependencyVerification.
]

{ #category : 'access - verifications' }
VerificationFrameworkSettings >> accessRoleMediationDependencyVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: RelationDependencyVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessUndefFormalAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: UndefFormalAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessUndefFormalAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: UndefFormalAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessUndefPhaseAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: UndefPhaseAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessUndefPhaseAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: UndefPhaseAntipatternVerification withValue: aValue.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessWholeOverAntipatternVerification [
	"My code is generated by getterMessageCodeFor:"
	^ self getSettingFor: WholeOverAntipatternVerification.
]

{ #category : 'access - anti-patterns' }
VerificationFrameworkSettings >> accessWholeOverAntipatternVerification: aValue [
	"My code is generated by setterMessageCodeFor:"
	self setSettingFor: WholeOverAntipatternVerification withValue: aValue.
]

{ #category : 'access' }
VerificationFrameworkSettings >> getSettingFor: aVerificationClass [
	(settings includesKey: aVerificationClass) ifFalse: [ settings add: (aVerificationClass -> true) ].
	^ settings at: aVerificationClass.
]

{ #category : 'initialization' }
VerificationFrameworkSettings >> initialize [
	| controller |
	controller := VerificationController new.
	settings := Dictionary new.
	controller getVerifications do: [ :class | settings add: (class -> true). ].
	controller getAntiPatternVerifications do: [ :class | settings add: (class -> true). ].
]

{ #category : 'access' }
VerificationFrameworkSettings >> setSettingFor: aVerificationClass withValue: aValue [
	settings at: aVerificationClass put: aValue.
]
